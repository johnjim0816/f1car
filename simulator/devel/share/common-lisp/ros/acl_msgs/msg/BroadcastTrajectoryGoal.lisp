; Auto-generated. Do not edit!


(cl:in-package acl_msgs-msg)


;//! \htmlinclude BroadcastTrajectoryGoal.msg.html

(cl:defclass <BroadcastTrajectoryGoal> (roslisp-msg-protocol:ros-message)
  ((trajectory
    :reader trajectory
    :initarg :trajectory
    :type acl_msgs-msg:Trajectory
    :initform (cl:make-instance 'acl_msgs-msg:Trajectory))
   (relative_starting_coordinates
    :reader relative_starting_coordinates
    :initarg :relative_starting_coordinates
    :type cl:boolean
    :initform cl:nil))
)

(cl:defclass BroadcastTrajectoryGoal (<BroadcastTrajectoryGoal>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <BroadcastTrajectoryGoal>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'BroadcastTrajectoryGoal)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name acl_msgs-msg:<BroadcastTrajectoryGoal> is deprecated: use acl_msgs-msg:BroadcastTrajectoryGoal instead.")))

(cl:ensure-generic-function 'trajectory-val :lambda-list '(m))
(cl:defmethod trajectory-val ((m <BroadcastTrajectoryGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader acl_msgs-msg:trajectory-val is deprecated.  Use acl_msgs-msg:trajectory instead.")
  (trajectory m))

(cl:ensure-generic-function 'relative_starting_coordinates-val :lambda-list '(m))
(cl:defmethod relative_starting_coordinates-val ((m <BroadcastTrajectoryGoal>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader acl_msgs-msg:relative_starting_coordinates-val is deprecated.  Use acl_msgs-msg:relative_starting_coordinates instead.")
  (relative_starting_coordinates m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <BroadcastTrajectoryGoal>) ostream)
  "Serializes a message object of type '<BroadcastTrajectoryGoal>"
  (roslisp-msg-protocol:serialize (cl:slot-value msg 'trajectory) ostream)
  (cl:write-byte (cl:ldb (cl:byte 8 0) (cl:if (cl:slot-value msg 'relative_starting_coordinates) 1 0)) ostream)
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <BroadcastTrajectoryGoal>) istream)
  "Deserializes a message object of type '<BroadcastTrajectoryGoal>"
  (roslisp-msg-protocol:deserialize (cl:slot-value msg 'trajectory) istream)
    (cl:setf (cl:slot-value msg 'relative_starting_coordinates) (cl:not (cl:zerop (cl:read-byte istream))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<BroadcastTrajectoryGoal>)))
  "Returns string type for a message object of type '<BroadcastTrajectoryGoal>"
  "acl_msgs/BroadcastTrajectoryGoal")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'BroadcastTrajectoryGoal)))
  "Returns string type for a message object of type 'BroadcastTrajectoryGoal"
  "acl_msgs/BroadcastTrajectoryGoal")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<BroadcastTrajectoryGoal>)))
  "Returns md5sum for a message object of type '<BroadcastTrajectoryGoal>"
  "bb87a26e42509a1a023ac20a2d51a6d6")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'BroadcastTrajectoryGoal)))
  "Returns md5sum for a message object of type 'BroadcastTrajectoryGoal"
  "bb87a26e42509a1a023ac20a2d51a6d6")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<BroadcastTrajectoryGoal>)))
  "Returns full string definition for message of type '<BroadcastTrajectoryGoal>"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#goal definition~%acl_msgs/Trajectory trajectory~%bool relative_starting_coordinates~%~%================================================================================~%MSG: acl_msgs/Trajectory~%Header header~%geometry_msgs/Vector3Stamped[] pos~%geometry_msgs/Vector3Stamped[] vel~%geometry_msgs/Vector3Stamped[] acc~%geometry_msgs/Vector3Stamped[] jerk~%~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: geometry_msgs/Vector3Stamped~%# This represents a Vector3 with reference coordinate frame and timestamp~%Header header~%Vector3 vector~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'BroadcastTrajectoryGoal)))
  "Returns full string definition for message of type 'BroadcastTrajectoryGoal"
  (cl:format cl:nil "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======~%#goal definition~%acl_msgs/Trajectory trajectory~%bool relative_starting_coordinates~%~%================================================================================~%MSG: acl_msgs/Trajectory~%Header header~%geometry_msgs/Vector3Stamped[] pos~%geometry_msgs/Vector3Stamped[] vel~%geometry_msgs/Vector3Stamped[] acc~%geometry_msgs/Vector3Stamped[] jerk~%~%~%================================================================================~%MSG: std_msgs/Header~%# Standard metadata for higher-level stamped data types.~%# This is generally used to communicate timestamped data ~%# in a particular coordinate frame.~%# ~%# sequence ID: consecutively increasing ID ~%uint32 seq~%#Two-integer timestamp that is expressed as:~%# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')~%# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')~%# time-handling sugar is provided by the client library~%time stamp~%#Frame this data is associated with~%string frame_id~%~%================================================================================~%MSG: geometry_msgs/Vector3Stamped~%# This represents a Vector3 with reference coordinate frame and timestamp~%Header header~%Vector3 vector~%~%================================================================================~%MSG: geometry_msgs/Vector3~%# This represents a vector in free space. ~%# It is only meant to represent a direction. Therefore, it does not~%# make sense to apply a translation to it (e.g., when applying a ~%# generic rigid transformation to a Vector3, tf2 will only apply the~%# rotation). If you want your data to be translatable too, use the~%# geometry_msgs/Point message instead.~%~%float64 x~%float64 y~%float64 z~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <BroadcastTrajectoryGoal>))
  (cl:+ 0
     (roslisp-msg-protocol:serialization-length (cl:slot-value msg 'trajectory))
     1
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <BroadcastTrajectoryGoal>))
  "Converts a ROS message object to a list"
  (cl:list 'BroadcastTrajectoryGoal
    (cl:cons ':trajectory (trajectory msg))
    (cl:cons ':relative_starting_coordinates (relative_starting_coordinates msg))
))
